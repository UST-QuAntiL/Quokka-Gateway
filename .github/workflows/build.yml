name: Gateway CI

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:

jobs:

  java:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'
      - name: Build with Maven
        run: mvn -B package
      - name: Upload binary to artifacts
        uses: actions/upload-artifact@v2
        if: github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags')
        with:
          name: artifacts
          path: ${{ github.workspace }}/**/target/*.jar

  docker:
    needs: java
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: ${{ github.workspace }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: amd64,arm64
      - name: Set variables
        id: vars
        run: |
          DOCKER_IMAGE=planqk/quokka-gateway
          VERSION=latest
          SHORTREF=${GITHUB_SHA::8}

          # If this is git tag, use the tag name
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${SHORTREF}"

          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
      - name: Set up Docker build
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push latest Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.noBuild
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.vars.outputs.tags }}
